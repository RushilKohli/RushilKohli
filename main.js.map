{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n// constant to convert in to cm\nconst FACT = 2.54;\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Assignment03-Rushil_Kohli';\n\n  h1 = \"Inch to Cm Converter\";\n  // properties\n  in = \"1\";\n  cm = FACT;\n\n  // ctor\n  constructor()\n  {\n    // test your toDecimal() and print the result here\n    console.log(this.toDecimal(\"1\"));\n    console.log(this.toDecimal(\"1.2\"));\n    console.log(this.toDecimal(\"1/2\"));\n    console.log(this.toDecimal(\"1 2/3\"));\n  }\n\n  convertToInch()\n  {\n    this.in = (Math.round(this.cm / FACT * 10000) / 10000).toString();\n  }\n\n  // convert Inch(string) to Cm\n  convertToCm()\n  {\n    // first, must convert string to numeric inch\n    let inch = this.toDecimal(this.in);\n\n    // do conversion and 4-decimal precision\n    this.cm = Math.round(inch * FACT * 10000) / 10000;\n  }\n\n  // OptionA: convert fractional number to decimal number\n  toDecimal(fractionString: string) : number\n  {\n    let decimal = 0;\n    \n    // find space using regex /\\s+/\n    let tokens = fractionString.trim().split(/\\s+/);\n\n    if(tokens.length == 1)\n    {\n      let parts = tokens[0].split(\"/\");\n      if(parts.length == 1)\n      {\n        decimal = parseFloat(parts[0]);\n      }\n      else if(parts.length == 2)\n      {\n        let numerator = parseFloat(parts[0]);\n        let denominator = parseFloat(parts[1]);\n        decimal = numerator/denominator;\n      }\n    }\n    // Case: 1 1/16\n    else if (tokens.length == 2) {\n      // get integer\n      decimal = parseFloat(tokens[0]); // put the integer to decimal\n      // get fraction part\n      let parts = tokens[1].split(\"/\");\n      if(parts.length == 2)\n      {\n        let numerator = parseFloat(parts[0]);\n        let denominator = parseFloat(parts[1]);\n        decimal += numerator/denominator\n      }\n    }\n\n    return decimal;\n  }\n}","<h1>\n  Convert Inch to Cm\n</h1>\n\n<div>\n  Enter a decimal number for centimeter, and a decimal or fractional number for inch, for example. \"1 1/4\".\n</div>\n<br>\n<div id=\"inBlock\">\n  <div id=\"titleInch\">Inch</div><br>\n  <input id=\"inchInput\" type=\"text\" [(ngModel)] = \"in\" (ngModelChange)=\"convertToCm()\">\n  <img id=\"arrows\" src=\"assets/images/arrows.png\">\n</div>\n<div id=\"cmBlock\">\n  <div id=\"titleCm\">Cm</div><br>\n  <input id=\"cmInput\" type=\"text\" [(ngModel)] = \"cm\" (ngModelChange)=\"convertToInch()\">\n</div>\n\n<p>\n  Inch: {{in}} in\n  <br>\n  Centimeters: {{cm}} cm\n</p>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms'; // 2-way data binding\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule, FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}